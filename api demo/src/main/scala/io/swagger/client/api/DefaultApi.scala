/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.model.Errors
import io.swagger.client.model.Member
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object DefaultApi {

  /**
   * to retrieve the list of Members
   * 
   * Expected answers:
   *   code 200 : Seq[Any] (list of Members)
   *   code 400 :  (member does not exists)
   *   code 500 :  (internal server erro)
   */
  def membersGet(): ApiRequest[Seq[Any]] =
    ApiRequest[Seq[Any]](ApiMethods.GET, "https://virtserver.swaggerhub.com/parameshnon/member/1.0.0", "/members", "application/json")
      .withSuccessResponse[Seq[Any]](200)
      .withErrorResponse[Unit](400)
      .withErrorResponse[Unit](500)
        /**
   * member retrieve
   * 
   * Expected answers:
   *   code 200 : Member (return successfully)
   *              Headers :
   *                X-Rate-Limit-Remaining - 
   *                X-Rate-Limit-Reset - 
   *   code 400 :  (record not found)
   *   code 500 : Errors (error occures)
   * 
   * @param memberid 
   */
  def membersMemberidGet(memberid: String): ApiRequest[Member] =
    ApiRequest[Member](ApiMethods.GET, "https://virtserver.swaggerhub.com/parameshnon/member/1.0.0", "/members/{memberid}", "application/json")
      .withPathParam("memberid", memberid)
      .withSuccessResponse[Member](200)
      .withErrorResponse[Unit](400)
      .withErrorResponse[Errors](500)
      
  object MembersMemberidGetHeaders { 
    def xRateLimitRemaining(r: ApiReturnWithHeaders) = r.getIntHeader("X-Rate-Limit-Remaining")
    def xRateLimitReset(r: ApiReturnWithHeaders) = r.getDateTimeHeader("X-Rate-Limit-Reset")
  }
  /**
   * create member
   * 
   * Expected answers:
   *   code 204 :  (create successfully)
   * 
   * @param member member
   */
  def membersPost(member: Option[Member] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "https://virtserver.swaggerhub.com/parameshnon/member/1.0.0", "/members", "application/json")
      .withBody(member)
      .withSuccessResponse[Unit](204)
      

}

